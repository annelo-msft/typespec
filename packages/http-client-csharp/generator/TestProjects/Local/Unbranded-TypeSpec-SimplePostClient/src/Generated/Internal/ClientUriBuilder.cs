// <auto-generated/>

#nullable enable

using System;
using System.Text;

namespace SimplePost;

internal partial class ClientUriBuilder
{
    private UriBuilder? _uriBuilder;
    private StringBuilder? _pathBuilder;
    private StringBuilder? _queryBuilder;

    public ClientUriBuilder()
    {
    }

    private UriBuilder UriBuilder => _uriBuilder ??= new UriBuilder();

    private StringBuilder PathBuilder => _pathBuilder ??= new StringBuilder(UriBuilder.Path);

    private StringBuilder QueryBuilder => _queryBuilder ??= new StringBuilder(UriBuilder.Query);

    public void Reset(Uri uri)
    {
        _uriBuilder = new UriBuilder(uri);
        _pathBuilder = new StringBuilder(UriBuilder.Path);
    }

    public void AppendPath(string value, bool escape)
    {
        if (escape)
        {
            value = Uri.EscapeDataString(value);
        }
        if (PathBuilder.Length > 0 && PathBuilder[PathBuilder.Length - 1] == '/' && value[0] == '/')
        {
            PathBuilder.Remove(PathBuilder.Length - 1, 1);
        }
        PathBuilder.Append(value);
        UriBuilder.Path = PathBuilder.ToString();
    }

    public void AppendPath(int value, bool escape = true) => AppendPath(TypeFormatters.ToString(value), escape);

    public Uri ToUri()
    {
        if (_pathBuilder != null)
        {
            UriBuilder.Path = _pathBuilder.ToString();
        }
        if (_queryBuilder != null)
        {
            UriBuilder.Query = _queryBuilder.ToString();
        }
        return UriBuilder.Uri;
    }
}