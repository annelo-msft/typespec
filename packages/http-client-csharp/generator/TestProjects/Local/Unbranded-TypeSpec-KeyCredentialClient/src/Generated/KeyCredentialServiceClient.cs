// <auto-generated/>

#nullable disable

using System;
using System.ClientModel;
using System.ClientModel.Primitives;
using System.Threading;

namespace KeyCredentialService
{
    /// <summary></summary>
    public partial class KeyCredentialServiceClient
    {
        private readonly Uri _endpoint;
        private const string AuthorizationHeader = "API-KEY";
        /// <summary> A credential used to authenticate to the service. </summary>
        private readonly ApiKeyCredential _keyCredential;
        private KeyCredentialServiceClient _cachedKeyCredentialServiceClient;

        /// <summary> Initializes a new instance of KeyCredentialServiceClient for mocking. </summary>
        protected KeyCredentialServiceClient()
        {
        }

        internal KeyCredentialServiceClient(ClientPipeline pipeline, ApiKeyCredential keyCredential, Uri endpoint)
        {
            _endpoint = endpoint;
            Pipeline = pipeline;
            _keyCredential = keyCredential;
        }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public ClientPipeline Pipeline { get; }

        /// <summary> Initializes a new instance of KeyCredentialServiceClient. </summary>
        public virtual KeyCredentialServiceClient GetKeyCredentialServiceClient()
        {
            return Volatile.Read(ref _cachedKeyCredentialServiceClient) ?? Interlocked.CompareExchange(ref _cachedKeyCredentialServiceClient, new KeyCredentialServiceClient(Pipeline, _keyCredential, _endpoint), null) ?? _cachedKeyCredentialServiceClient;
        }
    }
}
