// <auto-generated/>

#nullable enable

using System;
using System.ClientModel;
using System.ClientModel.Primitives;

namespace KeyCredentialService;

/// <summary>.NET client for communicating with the SimplePost service.</summary>
public partial class KeyCredentialServiceClient
{
    private const string AuthorizationHeader = "API-KEY";

    private readonly Uri _endpoint;
    private readonly ClientPipeline _pipeline;

    /// <summary> Creates a new instance of KeyCredentialServiceClient for mocking. </summary>
    protected KeyCredentialServiceClient()
    {
        _endpoint = default!;
        _pipeline = default!;
    }

    /// <summary>
    /// Creates a new instance of <see cref="KeyCredentialServiceClient"/>.
    /// </summary>
    /// <param name="endpoint">The service endpoint.</param>
    /// <param name="credential">The API key credential to use to authenticate with the service.</param>
    /// <param name="options">Options to configure the client.</param>
    public KeyCredentialServiceClient(Uri endpoint, ApiKeyCredential credential, KeyCredentialServiceClientOptions? options = default)
    {
        Argument.AssertNotNull(endpoint, nameof(endpoint));
        Argument.AssertNotNull(credential, nameof(credential));

        options ??= new KeyCredentialServiceClientOptions();

        _endpoint = endpoint;
        _pipeline = ClientPipeline.Create(options,
            perCallPolicies: ReadOnlySpan<PipelinePolicy>.Empty,
            perTryPolicies: [ApiKeyAuthenticationPolicy.CreateHeaderApiKeyPolicy(credential, AuthorizationHeader)],
            beforeTransportPolicies: ReadOnlySpan<PipelinePolicy>.Empty);
    }

    /// <summary> The pipeline for sending and receiving HTTP requests and responses. </summary>
    public ClientPipeline Pipeline => _pipeline;
}
